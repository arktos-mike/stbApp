{"version":3,"sources":["icon.svg","components/Display.js","page/overview.js","components/InPut.js","page/settings.js","page/control.js","components/BreadCrumb.js","router.js","index.js"],"names":["Display","props","bodyStyle","padding","title","noDescr","tag","i18next","t","name","value","val","suffix","noEng","Overview","isElectron","window","process","type","plcReplyListenerOverview","event","setState","angleGV","state","myTheme","header","primaryColor","secondaryColor","highlightColor","backgroundColor","body","panel","global","fontFamily","this","ipcRenderer","send","on","removeListener","style","align","gutter","React","Component","InPut","disabled","size","addonBefore","addonAfter","width","textAlign","Number","theme","onChange","decimal","dec","negative","min","confirm","Settings","plcReplyListenerSetting","weftDensity","writeValue","prevState","obj","icon","ExclamationCircleOutlined","fontSize","okText","cancelText","content","centered","okButtonProps","danger","cancelButtonProps","onOk","user","Control","plcReplyListenerControl","modeInt","langChangedListenerControl","lang","showConfirm","BreadCrumb","location","useLocation","pathnames","pathname","split","filter","item","separator","margin","length","Item","to","EyeOutlined","map","index","routeTo","slice","join","breadCrumbView","Header","Content","Footer","Option","MainRouter","showDrawer","visible","onClose","openNotificationWithIcon","message","dur","descr","notification","description","placement","duration","handleClick","e","current","key","handleChange","idleTimer","handleOnAction","bind","handleOnActive","handleOnIdle","curTime","curDate","mode","userVisible","timeVisible","remember","init","resources","require","changeLanguage","moment","updateLocale","ruLocale","trLocale","esLocale","res","setInterval","d","format","removeAllListeners","ref","timeout","onActive","onIdle","onAction","debounce","className","position","zIndex","display","justifyContent","onClick","src","logo","alt","selectedKeys","ToolOutlined","SettingOutlined","onLogOut","shape","UserOutlined","optionLabelProp","language","dropdownStyle","dropdownAlign","offset","dropdownMatchSelectWidth","color","bordered","label","exact","path","render","closable","getContainer","UserModal","formRef","createRef","changeHandle","onClear","onFinish","values","password","resetFields","changeVisible","onCancel","destroyOnClose","afterClose","labelCol","span","wrapperCol","initialValues","preserve","rules","required","placeholder","virtual","suffixIcon","displayRule","replace","Password","visibilityToggle","prefix","LockOutlined","valuePropName","htmlType","ChangeModal","oldpassword","newpassword","DateTimeModal","dt","date","set","hour","time","get","minute","second","unix","toISOString","newtime","flex","alignItems","locale","enlocale","rulocale","trlocale","eslocale","popupStyle","transform","use12Hours","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.48a14e85.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.b2a2ed88.svg\";","import React from \"react\";\r\nimport { Statistic, Card } from \"antd\";\r\nimport i18next from 'i18next';\r\n\r\nconst Display = (props) => {\r\n    return (\r\n        <Card bodyStyle={{ padding: \"12px 36px\" }}>\r\n            <Statistic\r\n                title={props.noDescr ? null : props.tag === null ? \"--\" : i18next.t('tags.' + props.tag.name + '.descr')}\r\n                value={props.tag === null ? \"--\" : props.tag.val}\r\n                suffix={props.noEng ? null : props.tag === null ? <span>--</span>: <span> {i18next.t('tags.' + props.tag.name + '.eng')}</span>}\r\n            />\r\n        </Card>\r\n    );\r\n}\r\nexport default Display;","import React from 'react';\r\nimport { Row, Col } from \"antd\";\r\nimport Display from \"../components/Display\";\r\nimport \"./App.css\";\r\n\r\nexport default class Overview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            angleGV: null,\r\n        };\r\n        this.myTheme = {\r\n            header: {\r\n                primaryColor: '#263238',\r\n                secondaryColor: '#f9f9f9',\r\n                highlightColor: '#3c8ffe',\r\n                backgroundColor: '#001529',\r\n            },\r\n            body: {\r\n                primaryColor: '#263238',\r\n                secondaryColor: '#32a5f2',\r\n                highlightColor: '#FFC107',\r\n                backgroundColor: '#f9f9f9',\r\n            },\r\n            panel: {\r\n                backgroundColor: '#CFD8DC'\r\n            },\r\n            global: {\r\n                fontFamily: '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji'\r\n            },\r\n        };\r\n    }\r\n\r\n    isElectron = () => {\r\n        return window && window.process && window.process.type;\r\n    }\r\n\r\n    plcReplyListenerOverview = (event, val, tag) => {\r\n        if (tag.name === \"angleGV\") {\r\n            tag.val = val;\r\n            this.setState({\r\n                angleGV: tag\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.isElectron()) {\r\n            window.ipcRenderer.send(\"tagsUpdSelect\", [\"angleGV\"]);\r\n            window.ipcRenderer.on('plcReply', this.plcReplyListenerOverview);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.ipcRenderer.removeListener('plcReply', this.plcReplyListenerOverview);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ padding: 8 }}>\r\n\r\n                <Row align=\"top\" gutter={[16, 0]}>\r\n                    <Col>\r\n                        <Display tag={this.state.angleGV}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport NumPad from 'react-numpad';\r\nimport i18next from 'i18next';\r\n\r\nconst myTheme = {\r\n    header: {\r\n        primaryColor: '#263238',\r\n        secondaryColor: '#f9f9f9',\r\n        highlightColor: '#3c8ffe',\r\n        backgroundColor: '#001529',\r\n    },\r\n    body: {\r\n        primaryColor: '#263238',\r\n        secondaryColor: '#32a5f2',\r\n        highlightColor: '#FFC107',\r\n        backgroundColor: '#f9f9f9',\r\n    },\r\n    panel: {\r\n        backgroundColor: '#CFD8DC'\r\n    },\r\n    global: {\r\n        fontFamily: '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji'\r\n    },\r\n};\r\n\r\nconst InPut = (props) => {\r\n    if (props.disabled) {\r\n        return (<Input size=\"large\"\r\n            addonBefore={props.noDescr ? null : props.tag === null ? \"--\" : i18next.t('tags.' + props.tag.name + '.descr')}\r\n            addonAfter={props.noEng ? null : props.tag === null ? \"--\" : i18next.t('tags.' + props.tag.name + '.eng')}\r\n            value={props.tag === null ? \"--\" : props.tag.val}\r\n            style={{ width: \"65%\", textAlign: \"right\" }}\r\n            disabled\r\n        />);\r\n    }\r\n    return (\r\n        <NumPad.Number\r\n            theme={myTheme}\r\n            onChange={(value) => {\r\n                props.onChange(value)\r\n            }}\r\n            decimal={props.tag === null ? \"--\" : props.tag.dec}\r\n            negative={props.tag === null ? \"--\" : props.tag.min < 0 ? true : false}\r\n        >\r\n            <Input size=\"large\"\r\n                addonBefore={props.noDescr ? null : props.tag === null ? \"--\" : i18next.t('tags.' + props.tag.name + '.descr')}\r\n                addonAfter={props.noEng ? null : props.tag === null ? \"--\" : i18next.t('tags.' + props.tag.name + '.eng')}\r\n                value={props.tag === null ? \"--\" : props.tag.val}\r\n                style={{ width: \"65%\", textAlign: \"right\" }}\r\n            />\r\n        </NumPad.Number>\r\n    );\r\n}\r\nexport default InPut;","import React from 'react';\r\nimport { Row, Col, Modal } from \"antd\";\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport InPut from \"../components/InPut\";\r\nimport \"./App.css\";\r\nimport i18next from 'i18next';\r\n\r\nconst { confirm } = Modal;\r\n\r\n\r\nexport default class Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            weftDensity: null,\r\n        };\r\n    }\r\n\r\n    isElectron = () => {\r\n        return window && window.process && window.process.type;\r\n    }\r\n\r\n    plcReplyListenerSetting = (event, val, tag) => {\r\n        if (tag.name === \"weftDensity\") {\r\n            tag.val = val;\r\n            this.setState({\r\n                weftDensity: tag\r\n            });\r\n        }\r\n    };\r\n\r\n    writeValue = (value, tag) => {\r\n        if (value !== tag.val) {\r\n            window.ipcRenderer.send(\"plcWrite\", tag.name, value);\r\n            this.setState((prevState) => {\r\n                let obj = prevState[tag.name];\r\n                obj.val = value;\r\n                return { [tag.name]: obj };\r\n            });\r\n        }\r\n    };\r\n\r\n    showConfirm(value, tag) {\r\n        confirm({\r\n            title: i18next.t('confirm.title'),\r\n            icon: <ExclamationCircleOutlined style={{ fontSize: \"300%\" }} />,\r\n            okText: i18next.t('confirm.ok'),\r\n            cancelText: i18next.t('confirm.cancel'),\r\n            content: i18next.t('confirm.descr'),\r\n            centered: true,\r\n            okButtonProps: { size: 'large', danger: true },\r\n            cancelButtonProps: { size: 'large' },\r\n            onOk: () => this.writeValue(value, tag),\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.isElectron()) {\r\n            window.ipcRenderer.send(\"tagsUpdSelect\", []);\r\n            window.ipcRenderer.on('plcReply', this.plcReplyListenerSetting);\r\n            window.ipcRenderer.send(\"plcRead\", [\"weftDensity\"]);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.ipcRenderer.removeListener('plcReply', this.plcReplyListenerSetting);\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ padding: 8 }}>\r\n                <Row align=\"top\" gutter={[16, 0]}>\r\n                    <Col>\r\n                        <InPut tag={this.state.weftDensity} disabled={this.props.user !== \"anon\" ? false : true} onChange={(value) => {\r\n                            this.writeValue(value, this.state.weftDensity);\r\n                        }} />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { Row, Col, Modal } from \"antd\";\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport InPut from \"../components/InPut\";\r\nimport \"./App.css\";\r\nimport i18next from 'i18next';\r\n\r\nconst { confirm } = Modal;\r\n\r\nexport default class Control extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modeInt: null,\r\n        };\r\n    }\r\n\r\n    isElectron = () => {\r\n        return window && window.process && window.process.type;\r\n    }\r\n\r\n    plcReplyListenerControl = (event, val, tag) => {\r\n        if (tag.name === \"modeInt\") {\r\n            tag.val = val;\r\n            this.setState({\r\n                modeInt: tag\r\n            });\r\n        }\r\n    };\r\n\r\n    langChangedListenerControl = (event, lang) => {\r\n        window.ipcRenderer.send(\"plcRead\", [\"modeInt\"]);\r\n    };\r\n\r\n    writeValue = (value, tag) => {\r\n        if (value !== tag.val) {\r\n            window.ipcRenderer.send(\"plcWrite\", tag.name, value);\r\n            this.setState((prevState) => {\r\n                let obj = prevState[tag.name];\r\n                obj.val = value;\r\n                return { [tag.name]: obj };\r\n            });\r\n        }\r\n    };\r\n\r\n    showConfirm(value, tag) {\r\n        confirm({\r\n            title: i18next.t('confirm.title'),\r\n            icon: <ExclamationCircleOutlined style={{ fontSize: \"300%\" }} />,\r\n            okText: i18next.t('confirm.ok'),\r\n            cancelText: i18next.t('confirm.cancel'),\r\n            content: i18next.t('confirm.descr'),\r\n            centered: true,\r\n            okButtonProps: { size: 'large', danger: true },\r\n            cancelButtonProps: { size: 'large' },\r\n            onOk: () => this.writeValue(value, tag),\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.isElectron()) {\r\n            window.ipcRenderer.send(\"tagsUpdSelect\", []);\r\n            window.ipcRenderer.on('plcReply', this.plcReplyListenerControl);\r\n            window.ipcRenderer.send(\"plcRead\", [\"modeInt\"]);\r\n            window.ipcRenderer.on('langChanged', this.langChangedListenerControl);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.ipcRenderer.removeListener('plcReply', this.plcReplyListenerControl);\r\n        window.ipcRenderer.removeListener('langChanged', this.langChangedListenerControl);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ padding: 8 }}>\r\n                <Row align=\"top\" gutter={[16, 0]}>\r\n                    <Col>\r\n                        <InPut noEng noDescr tag={this.state.modeInt} disabled={this.props.user !== \"anon\" ? false : true} onChange={(value) => {\r\n                            this.showConfirm(value, this.state.modeInt);\r\n                        }} />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport i18next from 'i18next';\r\nimport { EyeOutlined } from '@ant-design/icons';\r\n\r\nconst BreadCrumb = () => {\r\n    const location = useLocation();\r\n    const breadCrumbView = () => {\r\n        const { pathname } = location;\r\n        const pathnames = pathname.split(\"/\").filter((item) => item);\r\n        return (\r\n            <div>\r\n                <Breadcrumb separator=\">\" style={{ margin: '3px 0' }}>\r\n                    {pathnames.length > 0 ? (\r\n                        <Breadcrumb.Item key=\"overview\">\r\n                            <Link to=\"/\"><EyeOutlined /></Link>\r\n                        </Breadcrumb.Item>\r\n                    ) : (\r\n                        <Breadcrumb.Item key=\"overview\"><EyeOutlined /> {i18next.t('menu.overview')}</Breadcrumb.Item>\r\n                    )}\r\n                    {pathnames.map((name, index) => {\r\n                        const routeTo = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\r\n                        const isLast = index === pathnames.length - 1;\r\n                        return isLast ? (\r\n                            <Breadcrumb.Item key={name}>{i18next.t('menu.'+ name)}</Breadcrumb.Item>\r\n                        ) : (\r\n                            <Breadcrumb.Item key={name}>\r\n                                <Link to={`${routeTo}`}>{i18next.t('menu.'+ name)}</Link>\r\n                            </Breadcrumb.Item>\r\n                        );\r\n                    })}\r\n                </Breadcrumb>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return <>{breadCrumbView()}</>;\r\n};\r\n\r\nexport default BreadCrumb;","import React from 'react';\r\nimport { HashRouter, Route, Link, Switch } from 'react-router-dom';\r\nimport { Layout, Menu, Select, Drawer, Button, Modal, Input, Form, Checkbox, notification, DatePicker, TimePicker, ConfigProvider } from 'antd';\r\nimport \"./page/App.css\";\r\nimport logo from './icon.svg';\r\nimport { EyeOutlined, ToolOutlined, SettingOutlined, UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport Overview from \"./page/overview.js\";\r\nimport Settings from \"./page/settings.js\";\r\nimport Control from \"./page/control.js\";\r\nimport moment from \"moment\";\r\nimport i18next from 'i18next';\r\nimport BreadCrumb from \"./components/BreadCrumb\";\r\nimport NumPad from 'react-numpad';\r\nimport IdleTimer from 'react-idle-timer'\r\nimport ruLocale from \"moment/locale/ru\";\r\nimport trLocale from \"moment/locale/tr\";\r\nimport esLocale from \"moment/locale/es\";\r\nimport rulocale from 'antd/lib/locale/ru_RU';\r\nimport trlocale from 'antd/lib/locale/tr_TR';\r\nimport eslocale from 'antd/lib/locale/es_ES';\r\nimport enlocale from 'antd/lib/locale/en_US';\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nconst { Option } = Select;\r\n\r\nexport class MainRouter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.idleTimer = null\r\n        this.handleOnAction = this.handleOnAction.bind(this)\r\n        this.handleOnActive = this.handleOnActive.bind(this)\r\n        this.handleOnIdle = this.handleOnIdle.bind(this)\r\n        this.state = {\r\n            current: 'overview',\r\n            curTime: null,\r\n            curDate: null,\r\n            mode: null,\r\n            userVisible: false,\r\n            timeVisible: false,\r\n            visible: false,\r\n            remember: true,\r\n            user: 'anon'\r\n        };\r\n\r\n        if (this.isElectron()) {\r\n            window.ipcRenderer.send(\"appLoaded\");\r\n            i18next.init({\r\n                resources: require(`./lang.json`)\r\n            });\r\n        }\r\n    }\r\n\r\n    isElectron = () => {\r\n        return window && window.process && window.process.type;\r\n    }\r\n\r\n    showDrawer = () => {\r\n        if (!this.state.visible) {\r\n            this.setState({\r\n                visible: true,\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                visible: false,\r\n            });\r\n        }\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            visible: false,\r\n        });\r\n    };\r\n    openNotificationWithIcon = (type, message, dur, descr) => {\r\n        notification[type]({\r\n            message: message,\r\n            description: descr,\r\n            placement: 'bottomRight',\r\n            duration: dur\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.isElectron()) {\r\n            window.ipcRenderer.on('plcReply', (event, val, tag) => {\r\n                if (tag.name === \"mode\") {\r\n                    tag.val = val;\r\n                    this.setState({\r\n                        mode: tag\r\n                    });\r\n                }\r\n            });\r\n            window.ipcRenderer.on('langChanged', (event, lang) => {\r\n                i18next.changeLanguage(lang, () => { });\r\n                moment.updateLocale(lang, [ruLocale, trLocale, esLocale])\r\n            });\r\n            window.ipcRenderer.on('userChecked', (event, user, res) => {\r\n                if (res) {\r\n                    this.setState({\r\n                        userVisible: false,\r\n                    });\r\n                    this.openNotificationWithIcon('success', i18next.t('notifications.userok'), 2);\r\n                }\r\n                else {\r\n                    this.openNotificationWithIcon('error', i18next.t('notifications.usererror'), 2);\r\n                }\r\n            });\r\n            window.ipcRenderer.on('datetimeChanged', (event, res) => {\r\n                if (res) {\r\n                    this.setState({\r\n                        timeVisible: false,\r\n                    });\r\n                    this.openNotificationWithIcon('success', i18next.t('notifications.timeok'), 2);\r\n                }\r\n                else {\r\n                    this.openNotificationWithIcon('error', i18next.t('notifications.timeerror'), 2);\r\n                }\r\n            });\r\n            \r\n            window.ipcRenderer.on('userChanged', (event, user, remember) => {\r\n                this.setState({\r\n                    user: user,\r\n                    remember: remember,\r\n                    userVisible: false,\r\n                });\r\n            });\r\n            window.ipcRenderer.on('passChanged', (event, user, res) => {\r\n                if (res) {\r\n                    this.openNotificationWithIcon('success', i18next.t('notifications.passok'), 2);\r\n                }\r\n                else {\r\n                    this.openNotificationWithIcon('error', i18next.t('notifications.passerror'), 2);\r\n                }\r\n            });\r\n        }\r\n\r\n        setInterval(() => {\r\n            let d = moment().format(\"L\");\r\n            let t = moment().format(\"LTS\");\r\n            this.setState({\r\n                curTime: t,\r\n                curDate: d,\r\n            })\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.ipcRenderer.removeAllListeners('plcReply');\r\n        window.ipcRenderer.removeAllListeners('langChanged');\r\n        window.ipcRenderer.removeAllListeners('userChecked');\r\n        window.ipcRenderer.removeAllListeners('userChanged');\r\n        window.ipcRenderer.removeAllListeners('passChanged');\r\n        window.ipcRenderer.removeAllListeners('datetimeChanged');\r\n        \r\n    }\r\n\r\n    handleClick = e => {\r\n        this.setState({ current: e.key });\r\n    };\r\n\r\n    handleChange = value => {\r\n        window.ipcRenderer.send(\"langChange\", value);\r\n    };\r\n\r\n    render() {\r\n        const { current } = this.state;\r\n        return (\r\n            <div>\r\n                <IdleTimer\r\n                    ref={ref => { this.idleTimer = ref }}\r\n                    timeout={1000 * 60 * 1}\r\n                    onActive={this.handleOnActive}\r\n                    onIdle={this.handleOnIdle}\r\n                    onAction={this.handleOnAction}\r\n                    debounce={250}\r\n                />\r\n                <HashRouter>\r\n                    <Layout className=\"layout\">\r\n                        <Header style={{ position: 'fixed', zIndex: 1, width: '100%', padding: 0, display: 'inline-flex', justifyContent: \"space-between\" }}>\r\n                            <div className=\"logo\" onClick={this.showDrawer}>\r\n                                <img src={logo} className=\"App-logo\" alt=\"\"></img>\r\n                            </div>\r\n                            <Menu style={{\r\n                                fontSize: '150%'\r\n                            }} theme='dark' onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n                                <Menu.Item key=\"overview\">\r\n                                    <Link to=\"/\"><EyeOutlined style={{ fontSize: '100%' }} /></Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"control\" >\r\n                                    <Link to=\"/control\"><ToolOutlined style={{ fontSize: '100%' }} /></Link>\r\n                                </Menu.Item>\r\n                                <Menu.Item key=\"settings\" >\r\n                                    <Link to=\"/settings\"><SettingOutlined style={{ fontSize: '100%' }} /></Link>\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                            <UserModal visible={this.state.userVisible} user={this.state.user} onClose={() => { this.setState({ userVisible: false }) }} onLogOut={() => { window.ipcRenderer.send(\"logOut\"); }} />\r\n                            <div className=\"mode\" style={{ backgroundColor: this.state.mode === null ? '#00000000' : this.state.mode.val === i18next.t('tags.mode.init') ? '#000000FF' : this.state.mode.val === i18next.t('tags.mode.stop') ? '#FFB300FF' : this.state.mode.val === i18next.t('tags.mode.ready') ? '#3949ABFF' : this.state.mode.val === i18next.t('tags.mode.run') ? '#43A047FF' : this.state.mode.val === i18next.t('tags.mode.alarm') ? '#E53935FF' : '#00000000' }}>\r\n                                {this.state.mode === null ? i18next.t('tags.mode.unknown') : this.state.mode.val}\r\n                            </div>\r\n                            <div className=\"user\">\r\n                                <Button type=\"primary\" size=\"large\" shape=\"circle\" icon={<UserOutlined style={{ fontSize: '100%' }} />} onClick={() => { this.setState({ userVisible: true }) }} /><span className=\"text\">{i18next.t('user.' + this.state.user)}</span>\r\n                            </div>\r\n                            <div className=\"lang\">\r\n                                <Select optionLabelProp=\"label\" value={i18next.language} size=\"large\" dropdownStyle={{ fontSize: '40px !important' }} dropdownAlign={{ offset: [-40, 4] }} dropdownMatchSelectWidth={false} style={{ color: \"white\" }} onChange={this.handleChange} bordered={false}>\r\n                                    <Option value=\"ru\" label=\"RU\"><div>RU - Русский</div></Option>\r\n                                    <Option value=\"en\" label=\"EN\"><div>EN - English</div></Option>\r\n                                    <Option value=\"tr\" label=\"TR\"><div>TR - Türkçe</div></Option>\r\n                                    <Option value=\"es\" label=\"ES\"><div>ES - Español</div></Option>\r\n                                </Select>\r\n                            </div>\r\n                            <DateTimeModal visible={this.state.timeVisible} user={this.state.user} onClose={() => { this.setState({ timeVisible: false }) }} />\r\n                            <div className=\"time\" onClick={() => { this.setState({ timeVisible: true }) }}>\r\n                                {this.state.curTime} {this.state.curDate}\r\n                            </div>\r\n                        </Header>\r\n                        <div className=\"site-drawer-render-in-current-wrapper\">\r\n                            <Content style={{ padding: '0 28px', }}>\r\n                                <BreadCrumb />\r\n                                <div className=\"site-layout-content\">\r\n                                    <Switch>\r\n                                        <Route exact path={'/'} render={(props) => <Overview user={this.state.user} {...props} />} />\r\n                                        <Route exact path={'/control'} render={(props) => <Control user={this.state.user} {...props} />} />\r\n                                        <Route exact path={'/settings'} render={(props) => <Settings user={this.state.user} {...props} />} />\r\n                                    </Switch>\r\n                                    <Drawer\r\n                                        //title=\"Basic Drawer\"\r\n                                        placement=\"left\"\r\n                                        closable={false}\r\n                                        onClose={this.onClose}\r\n                                        visible={this.state.visible}\r\n                                        getContainer={false}\r\n                                        style={{ position: 'absolute', }}\r\n                                        bodyStyle={{ margin: \"0px\", padding: \"0px\" }}\r\n\r\n                                    >\r\n                                        <Menu style={{ fontSize: '150%' }} onClick={this.handleClick} selectedKeys={[current]} mode=\"inline\">\r\n                                            <Menu.Item key=\"overview\" icon={<EyeOutlined style={{ fontSize: '100%' }} />}>\r\n                                                <Link to=\"/\">{i18next.t('menu.overview')}</Link>\r\n                                            </Menu.Item>\r\n                                            <Menu.Item key=\"control\" icon={<ToolOutlined style={{ fontSize: '100%' }} />}>\r\n                                                <Link to=\"/control\">{i18next.t('menu.control')}</Link>\r\n                                            </Menu.Item>\r\n                                            <Menu.Item key=\"settings\" icon={<SettingOutlined style={{ fontSize: '100%' }} />}>\r\n                                                <Link to=\"/settings\">{i18next.t('menu.settings')}</Link>\r\n                                            </Menu.Item>\r\n                                        </Menu>\r\n                                    </Drawer>\r\n                                </div>\r\n                            </Content>\r\n                            <Footer style={{ textAlign: 'center', margin: '3px', padding: '0px', color: 'rgba(0, 0, 0, 0.45)' }}>{i18next.t('footer')}</Footer>\r\n                        </div>\r\n                    </Layout>\r\n                </HashRouter >\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleOnAction(event) {\r\n        //console.log('user did something', event)\r\n    }\r\n\r\n    handleOnActive(event) {\r\n        //console.log('user is active', event)\r\n        //console.log('time remaining', this.idleTimer.getRemainingTime())\r\n    }\r\n\r\n    handleOnIdle(event) {\r\n        //console.log('user is idle', event)\r\n        //console.log('last active', this.idleTimer.getLastActiveTime())\r\n        if (!this.state.remember) {\r\n            window.ipcRenderer.send(\"logOut\");\r\n            this.openNotificationWithIcon('warning', i18next.t('notifications.idle'), 0);\r\n        }\r\n    }\r\n}\r\n\r\nclass UserModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            password: null,\r\n            changeVisible: false,\r\n        }\r\n        this.myTheme = {\r\n            header: {\r\n                primaryColor: '#263238',\r\n                secondaryColor: '#f9f9f9',\r\n                highlightColor: '#3c8ffe',\r\n                backgroundColor: '#001529',\r\n            },\r\n            body: {\r\n                primaryColor: '#263238',\r\n                secondaryColor: '#32a5f2',\r\n                highlightColor: '#FFC107',\r\n                backgroundColor: '#f9f9f9',\r\n            },\r\n            panel: {\r\n                backgroundColor: '#CFD8DC'\r\n            },\r\n            global: {\r\n                fontFamily: '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji'\r\n            },\r\n        };\r\n    }\r\n    formRef = React.createRef();\r\n    changeHandle = (name, value) => {\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    onClear = () => {\r\n        this.changeHandle('password', null);\r\n    }\r\n    onFinish = (values) => {\r\n        window.ipcRenderer.send(\"checkSecret\", values.user, values.password, values.remember);\r\n        this.formRef.current.resetFields();\r\n        this.onClear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                title={i18next.t('user.signin')}\r\n                cancelText={i18next.t('menu.close')}\r\n                okButtonProps={{ size: 'large' }}\r\n                okText={i18next.t('user.logout')}\r\n                cancelButtonProps={{ size: 'large' }}\r\n                onOk={this.props.onLogOut}\r\n                onCancel={this.props.onClose}\r\n                visible={this.props.visible}\r\n                destroyOnClose={true}\r\n                centered={true}\r\n                afterClose={this.onClear}\r\n            >\r\n                <div className=\"sel\">\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{ span: 8 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        initialValues={{ remember: false }}\r\n                        size='large'\r\n                        onFinish={this.onFinish}\r\n                        ref={this.formRef}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            label={i18next.t('user.curuser')}\r\n                        >\r\n                            <span className=\"text\">{i18next.t('user.' + this.props.user)}</span>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label={i18next.t('user.user')}\r\n                            name=\"user\"\r\n                            rules={[{ required: true, message: i18next.t('user.fill') }]}\r\n                        >\r\n\r\n                            <Select placeholder={i18next.t('user.user')} virtual={false} value={this.state.user}\r\n                                size=\"large\" suffixIcon={<UserOutlined className=\"site-form-item-icon\" />}>\r\n                                <Option value=\"engineer\">{i18next.t('user.engineer')}</Option>\r\n                                <Option value=\"admin\">{i18next.t('user.admin')}</Option>\r\n                            </Select>\r\n\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label={i18next.t('user.password')}\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: i18next.t('user.fill') }]}\r\n                        >\r\n                            <NumPad.Number\r\n                                onChange={(value) => {\r\n                                    this.changeHandle('password', value);\r\n                                }}\r\n                                theme={this.myTheme}\r\n                                decimal={false}\r\n                                negative={false}\r\n                                displayRule={value => value.replace(/./g, '•')}\r\n                            >\r\n                                <Input.Password visibilityToggle={false} value={this.state.password} placeholder={i18next.t('user.password')} prefix={<LockOutlined className=\"site-form-item-icon\" />} />\r\n                            </NumPad.Number>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" wrapperCol={{ offset: 8, span: 16 }}>\r\n                            <Checkbox>{i18next.t('user.remember')}</Checkbox>\r\n                        </Form.Item>\r\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                            <ChangeModal visible={this.state.changeVisible} onClose={() => { this.setState({ changeVisible: false }) }} />\r\n                            <Button type=\"link\" onClick={() => { this.setState({ changeVisible: true }) }}>{i18next.t('user.change')}</Button>\r\n                        </Form.Item >\r\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                            <Button size=\"large\" type=\"primary\" htmlType=\"submit\" >\r\n                                {i18next.t('user.login')}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nclass ChangeModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            oldpassword: null,\r\n            newpassword: null,\r\n        }\r\n        this.myTheme = {\r\n            header: {\r\n                primaryColor: '#263238',\r\n                secondaryColor: '#f9f9f9',\r\n                highlightColor: '#3c8ffe',\r\n                backgroundColor: '#001529',\r\n            },\r\n            body: {\r\n                primaryColor: '#263238',\r\n                secondaryColor: '#32a5f2',\r\n                highlightColor: '#FFC107',\r\n                backgroundColor: '#f9f9f9',\r\n            },\r\n            panel: {\r\n                backgroundColor: '#CFD8DC'\r\n            },\r\n            global: {\r\n                fontFamily: '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji'\r\n            },\r\n        };\r\n    }\r\n    formRef = React.createRef();\r\n    changeHandle = (name, value) => {\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    onClear = () => {\r\n        this.changeHandle('oldpassword', null);\r\n        this.changeHandle('newpassword', null);\r\n    }\r\n    onFinish = (values) => {\r\n        window.ipcRenderer.send(\"changeSecret\", values.user, values.oldpassword, values.newpassword);\r\n        this.formRef.current.resetFields();\r\n        this.onClear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                title={i18next.t('user.change')}\r\n                okText={i18next.t('menu.close')}\r\n                okButtonProps={{ size: 'large' }}\r\n                onCancel={this.props.onClose}\r\n                onOk={this.props.onClose}\r\n                cancelButtonProps={{ style: { display: \"none\" } }}\r\n                visible={this.props.visible}\r\n                destroyOnClose={true}\r\n                centered={true}\r\n                afterClose={this.onClear}\r\n            >\r\n                <div className=\"sel\">\r\n                    <Form\r\n                        name=\"change\"\r\n                        labelCol={{ span: 8 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        size='large'\r\n                        onFinish={this.onFinish}\r\n                        ref={this.formRef}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            label={i18next.t('user.user')}\r\n                            name=\"user\"\r\n                            rules={[{ required: true, message: i18next.t('user.fill') }]}\r\n                        >\r\n\r\n                            <Select placeholder={i18next.t('user.user')} virtual={false} value={this.state.user}\r\n                                size=\"large\" suffixIcon={<UserOutlined className=\"site-form-item-icon\" />}>\r\n                                <Option value=\"engineer\">{i18next.t('user.engineer')}</Option>\r\n                                <Option value=\"admin\">{i18next.t('user.admin')}</Option>\r\n                            </Select>\r\n\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label={i18next.t('user.oldpassword')}\r\n                            name=\"oldpassword\"\r\n                            rules={[{ required: true, message: i18next.t('user.fill') }]}\r\n                        >\r\n                            <NumPad.Number\r\n                                onChange={(value) => {\r\n                                    this.changeHandle('oldpassword', value);\r\n                                }}\r\n                                theme={this.myTheme}\r\n                                decimal={false}\r\n                                negative={false}\r\n                                displayRule={value => value.replace(/./g, '•')}\r\n                            >\r\n                                <Input.Password visibilityToggle={false} value={this.state.oldpassword} placeholder={i18next.t('user.password')} prefix={<LockOutlined className=\"site-form-item-icon\" />} />\r\n                            </NumPad.Number>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label={i18next.t('user.newpassword')}\r\n                            name=\"newpassword\"\r\n                            rules={[{ required: true, message: i18next.t('user.fill') }]}\r\n                        >\r\n                            <NumPad.Number\r\n                                onChange={(value) => {\r\n                                    this.changeHandle('newpassword', value);\r\n                                }}\r\n                                theme={this.myTheme}\r\n                                decimal={false}\r\n                                negative={false}\r\n                                displayRule={value => value.replace(/./g, '•')}\r\n                            >\r\n                                <Input.Password visibilityToggle={false} value={this.state.newpassword} placeholder={i18next.t('user.password')} prefix={<LockOutlined className=\"site-form-item-icon\" />} />\r\n                            </NumPad.Number>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                            <Button size=\"large\" type=\"primary\" htmlType=\"submit\" >\r\n                                {i18next.t('user.submit')}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nclass DateTimeModal extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            newtime: null,\r\n        }\r\n        this.myTheme = {\r\n            header: {\r\n                primaryColor: '#263238',\r\n                secondaryColor: '#f9f9f9',\r\n                highlightColor: '#3c8ffe',\r\n                backgroundColor: '#001529',\r\n            },\r\n            body: {\r\n                primaryColor: '#263238',\r\n                secondaryColor: '#32a5f2',\r\n                highlightColor: '#FFC107',\r\n                backgroundColor: '#f9f9f9',\r\n            },\r\n            panel: {\r\n                backgroundColor: '#CFD8DC'\r\n            },\r\n            global: {\r\n                fontFamily: '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji'\r\n            },\r\n        };\r\n    }\r\n\r\n    formRef = React.createRef();\r\n\r\n    changeHandle = (name, value) => {\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onFinish = (values) => {\r\n        let dt = moment(values.date);\r\n        dt.set({\r\n            hour:   values.time.get('hour'),\r\n            minute: values.time.get('minute'),\r\n            second: values.time.get('second')\r\n        });\r\n        window.ipcRenderer.send(\"datetimeSet\", moment(dt).unix(), moment(dt).toISOString());\r\n        this.formRef.current.resetFields();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                title={i18next.t('time.title')}\r\n                okText={i18next.t('menu.close')}\r\n                okButtonProps={{ size: 'large' }}\r\n                onCancel={this.props.onClose}\r\n                onOk={this.props.onClose}\r\n                cancelButtonProps={{ style: { display: \"none\" } }}\r\n                visible={this.props.visible}\r\n                destroyOnClose={true}\r\n                bodyStyle={{ flex: '', alignItems: 'center', justifyContent: 'center' }}\r\n            >\r\n                <Form\r\n                    name=\"time\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    size='large'\r\n                    ref={this.formRef}\r\n                    onFinish={this.onFinish}\r\n                    preserve={false}\r\n                >\r\n                    <ConfigProvider locale={i18next.language === 'en' ? enlocale : i18next.language === 'ru' ? rulocale : i18next.language === 'tr' ? trlocale : i18next.language === 'es' ? eslocale : enlocale}>\r\n                        <Form.Item\r\n                            name=\"date\"\r\n                            label={i18next.t('time.date')}\r\n                            rules={[{ required: true, message: i18next.t('user.fill') }]}\r\n                        >\r\n                            <DatePicker popupStyle={{ transform: `scale(1.8)` }} style={{ width: \"250px\" }} size=\"large\" format='L' />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"time\"\r\n                            label={i18next.t('time.time')}\r\n                            rules={[{ required: true, message: i18next.t('user.fill') }]}\r\n                        >\r\n                            <TimePicker popupStyle={{ transform: `scale(1.8)` }} style={{ width: \"250px\" }} use12Hours={i18next.language === 'en' ? true : false} size=\"large\" format={i18next.language === 'en' ? 'h:mm:ss A' : 'HH:mm:ss'} />\r\n                        </Form.Item>\r\n                    </ConfigProvider>\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Button size=\"large\" type=\"primary\" htmlType=\"submit\" >\r\n                            {i18next.t('time.submit')}\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { MainRouter } from \"./router\";\r\n\r\nReactDom.render(  \r\n    <MainRouter/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}