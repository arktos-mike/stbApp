{"version":3,"sources":["icon.svg","page/index.js","router.js","index.js"],"names":["App","props","isElectron","window","process","type","updateValues","val","tag","name","setState","angleGV","weftDensity","state","myTheme","header","primaryColor","secondaryColor","highlightColor","backgroundColor","body","panel","global","fontFamily","ipcRenderer","send","on","event","style","padding","align","gutter","bodyStyle","title","this","descr","value","suffix","eng","Number","theme","onChange","prevState","obj","decimal","dec","negative","min","size","addonBefore","addonAfter","width","textAlign","React","Component","Header","Content","MainRouter","Footer","current","curTime","curDate","mode","handleClick","e","key","setInterval","d","moment","format","t","position","zIndex","className","src","logo","float","display","onClick","selectedKeys","Item","to","marginTop","exact","path","component","IndexPage","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6d91e05.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.b2a2ed88.svg\";","import React, { Fragment } from 'react';\r\nimport { Button, Table, Switch, Typography, Row, Col, Tabs, Modal, Input, InputNumber, Drawer, Descriptions, Divider, Popconfirm, Checkbox, Progress, Statistic, Card, Badge } from \"antd\";\r\nimport { LineChartOutlined, TableOutlined, CaretRightOutlined, PauseOutlined } from '@ant-design/icons';\r\nimport NumPad from 'react-numpad';\r\n\r\nimport \"./App.css\";\r\nimport Icon from '@ant-design/icons';\r\nimport { MainRouter } from '../router';\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            angleGV: null,\r\n            weftDensity: null,\r\n        };\r\n        this.myTheme = {\r\n            header: {\r\n                primaryColor: '#263238',\r\n                secondaryColor: '#f9f9f9',\r\n                highlightColor: '#3c8ffe',\r\n                backgroundColor: '#001529',\r\n            },\r\n            body: {\r\n                primaryColor: '#263238',\r\n                secondaryColor: '#32a5f2',\r\n                highlightColor: '#FFC107',\r\n                backgroundColor: '#f9f9f9',\r\n            },\r\n            panel: {\r\n                backgroundColor: '#CFD8DC'\r\n            },\r\n            global: {\r\n                fontFamily: '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji'\r\n            },\r\n        };\r\n        if (this.isElectron()) {\r\n            window.ipcRenderer.send(\"tagsUpdSelect\", [\"angleGV\"]);\r\n            window.ipcRenderer.on('plcReply', (event, val, tag) => {\r\n                this.updateValues(val, tag);\r\n            });\r\n            window.ipcRenderer.send(\"plcRead\", [\"weftDensity\"]);\r\n        }\r\n    }\r\n\r\n    isElectron = () => {\r\n        return window && window.process && window.process.type;\r\n    }\r\n\r\n    updateValues = (val, tag) => {\r\n        if (tag.name === \"angleGV\") {\r\n            tag.val = val;\r\n            this.setState({\r\n                angleGV: tag\r\n            });\r\n        }\r\n        if (tag.name === \"weftDensity\") {\r\n            tag.val = val;\r\n            this.setState({\r\n                weftDensity: tag\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ padding: 8 }}>\r\n\r\n                <Row align=\"top\" gutter={[16, 0]}>\r\n                    <Col>\r\n                        <Card bodyStyle={{ padding: \"12px 36px\" }}>\r\n                            <Statistic\r\n                                title={this.state.angleGV === null ? \"--\" : this.state.angleGV.descr}\r\n                                value={this.state.angleGV === null ? \"--\" : this.state.angleGV.val}\r\n                                suffix={<span> {this.state.angleGV === null ? \"--\" : this.state.angleGV.eng}</span>}\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <NumPad.Number\r\n                            theme={this.myTheme}\r\n                            onChange={(value) => {\r\n                                if (value !== this.state.weftDensity.val) {\r\n                                    window.ipcRenderer.send(\"plcWrite\", \"weftDensity\", value);\r\n                                }\r\n                                this.setState((prevState) => {\r\n                                    let obj = prevState.weftDensity;\r\n                                    obj.val = value;\r\n                                    return { weftDensity: obj };\r\n                                });\r\n                            }}\r\n                            decimal={this.state.weftDensity === null ? \"--\" : this.state.weftDensity.dec}\r\n                            negative={this.state.weftDensity === null ? \"--\" : this.state.weftDensity.min < 0 ? true : false}\r\n                        >\r\n                            <Input size=\"large\"\r\n                                addonBefore={this.state.weftDensity === null ? \"--\" : this.state.weftDensity.descr}\r\n                                addonAfter={this.state.weftDensity === null ? \"--\" : this.state.weftDensity.eng}\r\n                                value={this.state.weftDensity === null ? \"--\" : this.state.weftDensity.val}\r\n                                style={{ width: \"65%\", textAlign: \"right\" }}\r\n                            />\r\n                        </NumPad.Number>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}","import React from 'react';\r\nimport { HashRouter, Route, Link, Switch, Text } from 'react-router-dom';\r\nimport { Layout, Menu } from 'antd';\r\nimport \"./page/App.css\";\r\nimport logo from './icon.svg';\r\nimport IndexPage from \"./page/index.js\";\r\nimport moment from \"moment\";\r\nconst { Header, Content, Footer } = Layout;\r\nexport class MainRouter extends React.Component {\r\n    state = {\r\n        current: 'overview',\r\n        curTime: null,\r\n        curDate: null,\r\n        mode: null,\r\n    };\r\n    \r\n    isElectron = () => {\r\n        return window && window.process && window.process.type;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.isElectron()) {\r\n            window.ipcRenderer.on('plcReply', (event, val, tag) => {\r\n                if (tag.name === \"mode\") {\r\n                    tag.val = val;\r\n                    this.setState({\r\n                        mode: tag\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        setInterval(() => {\r\n            let d = moment().format(\"DD.MM.YYYY\");\r\n            let t = moment().format(\"HH:mm:ss\")\r\n            this.setState({\r\n                curTime: t,\r\n                curDate: d\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    handleClick = e => {\r\n        //console.log('click ', e);\r\n        this.setState({ current: e.key });\r\n    };\r\n\r\n    render() {\r\n        const { current } = this.state;\r\n        return (\r\n            <HashRouter>\r\n                <Layout>\r\n                    <Header style={{ position: 'fixed', zIndex: 1, width: '100%', padding: 0 }}>\r\n                        <div className=\"logo\">\r\n                            <img src={logo} className=\"App-logo\"></img>\r\n                        </div>\r\n                        <Menu style={{\r\n                            float: 'left', display: 'flex',\r\n                        }} theme='dark' onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n                            <Menu.Item key=\"overview\" >\r\n                                <Link to=\"/\">ОБЗОР</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"control\" >\r\n                                <Link to=\"/control\">УПРАВЛЕНИЕ</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"settings\" >\r\n                                <Link to=\"/settings\">НАСТРОЙКИ</Link>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                        <div className=\"mode\" style={{backgroundColor: this.state.mode===null?'#00000000':this.state.mode.val==='ИНИЦИАЛИЗАЦИЯ'?'#000000FF':this.state.mode.val==='СТОП'?'#FFB300FF':this.state.mode.val==='ПОДГОТОВКА'?'#3949ABFF':this.state.mode.val==='РАБОТА'?'#43A047FF':this.state.mode.val==='АВАРИЯ'?'#E53935FF':'#00000000'}}>\r\n                            {this.state.mode===null?\"НЕИЗВЕСТНО\":this.state.mode.val} \r\n                        </div>\r\n                        <div className=\"time\">\r\n                            {this.state.curTime} {this.state.curDate}\r\n                        </div>\r\n                    </Header>\r\n                    <Content style={{ marginTop: 64 }}>\r\n                        <Switch>\r\n                            <Route exact path={'/'} component={IndexPage} />\r\n                            <Route exact path={'/control'} component={IndexPage} />\r\n                            <Route exact path={'/settings'} component={IndexPage} />\r\n                        </Switch>\r\n                    </Content>\r\n                </Layout>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { MainRouter } from \"./router\";\r\n\r\nReactDom.render(  \r\n    <MainRouter/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}